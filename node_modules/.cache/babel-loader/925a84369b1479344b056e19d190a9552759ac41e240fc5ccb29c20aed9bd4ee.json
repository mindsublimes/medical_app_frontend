{"ast":null,"code":"var _jsxFileName = \"/home/dev-cache/medical-app-frontend/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext } from 'react';\nimport { useDataState, useDataDispatch } from '../contexts/DataContext';\nimport { fetchOpportunities } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const state = useDataState(); // Access state from context\n  const dispatch = useDataDispatch(); // Access dispatch from context\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Make an API call to get all opportunities\n        const response = await fetchOpportunities();\n        const data = response.data;\n\n        // Dispatch an action to update the state with the fetched data\n        dispatch({\n          type: 'UPDATE_OPPORTUNITIES',\n          payload: data\n        });\n      } catch (error) {\n        console.error('Error fetching opportunities:', error);\n      }\n    };\n    fetchData();\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Medical App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Opportunities:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: state.opportunities.map(opportunity => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: opportunity.procedure_name\n      }, opportunity.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"1smE/LRHrjrs4F0KVbWSCgzSyHk=\", false, function () {\n  return [useDataState, useDataDispatch];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useContext","useDataState","useDataDispatch","fetchOpportunities","jsxDEV","_jsxDEV","HomePage","_s","state","dispatch","fetchData","response","data","type","payload","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","opportunities","map","opportunity","procedure_name","id","_c","$RefreshReg$"],"sources":["/home/dev-cache/medical-app-frontend/src/components/HomePage.jsx"],"sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport { useDataState, useDataDispatch } from '../contexts/DataContext';\nimport { fetchOpportunities } from '../services/api';\n\nconst HomePage = () => {\n  const state = useDataState(); // Access state from context\n  const dispatch = useDataDispatch(); // Access dispatch from context\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Make an API call to get all opportunities\n        const response = await fetchOpportunities();\n        const data = response.data;\n\n        // Dispatch an action to update the state with the fetched data\n        dispatch({ type: 'UPDATE_OPPORTUNITIES', payload: data });\n      } catch (error) {\n        console.error('Error fetching opportunities:', error);\n      }\n    };\n\n    fetchData();\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Welcome to the Medical App</h1>\n      <h2>Opportunities:</h2>\n      <ul>\n        {state.opportunities.map((opportunity) => (\n          <li key={opportunity.id}>{opportunity.procedure_name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACpD,SAASC,YAAY,EAAEC,eAAe,QAAQ,yBAAyB;AACvE,SAASC,kBAAkB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,KAAK,GAAGP,YAAY,CAAC,CAAC,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,eAAe,CAAC,CAAC,CAAC,CAAC;;EAEpCH,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMR,kBAAkB,CAAC,CAAC;QAC3C,MAAMS,IAAI,GAAGD,QAAQ,CAACC,IAAI;;QAE1B;QACAH,QAAQ,CAAC;UAAEI,IAAI,EAAE,sBAAsB;UAAEC,OAAO,EAAEF;QAAK,CAAC,CAAC;MAC3D,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBACEJ,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnChB,OAAA;MAAAY,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhB,OAAA;MAAAY,QAAA,EACGT,KAAK,CAACc,aAAa,CAACC,GAAG,CAAEC,WAAW,iBACnCnB,OAAA;QAAAY,QAAA,EAA0BO,WAAW,CAACC;MAAc,GAA3CD,WAAW,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAhCID,QAAQ;EAAA,QACEL,YAAY,EACTC,eAAe;AAAA;AAAAyB,EAAA,GAF5BrB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}