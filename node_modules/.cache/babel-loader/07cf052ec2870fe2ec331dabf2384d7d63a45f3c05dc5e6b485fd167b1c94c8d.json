{"ast":null,"code":"var _jsxFileName = \"/home/dev-cache/medical-app-frontend/src/contexts/OpportunityContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { fetchOpportunities } from '../services/api';\n// Define the initial state with additional states\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  opportunities: [],\n  leads: [],\n  qualified: [],\n  booked: [],\n  treated: []\n  // ... other states\n};\nexport const DataContext = /*#__PURE__*/createContext();\n\n// Update the reducer to handle new actions\nconst dataReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_OPPORTUNITIES':\n      return {\n        ...state,\n        opportunities: action.payload\n      };\n    case 'SET_LEADS':\n      return {\n        ...state,\n        leads: action.payload\n      };\n    case 'SET_QUALIFIED':\n      return {\n        ...state,\n        qualified: action.payload\n      };\n    case 'SET_BOOKED':\n      return {\n        ...state,\n        booked: action.payload\n      };\n    case 'SET_TREATED':\n      return {\n        ...state,\n        treated: action.payload\n      };\n    // ... other cases\n    default:\n      return state;\n  }\n};\n\n// DataProvider component\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(dataReducer, initialState);\n  useEffect(() => {\n    // Fetch opportunities\n    fetchOpportunities().then(response => response.json()).then(data => {\n      dispatch({\n        type: 'SET_OPPORTUNITIES',\n        payload: data\n      });\n\n      // Filter opportunities based on the latest stage in their stage_history\n      const leads = data.filter(opportunity => opportunity.stage_history[opportunity.stage_history.length - 1].stage_name === 'Lead');\n      const qualified = data.filter(opportunity => opportunity.stage_history[opportunity.stage_history.length - 1].stage_name === 'Qualified');\n      const booked = data.filter(opportunity => opportunity.stage_history[opportunity.stage_history.length - 1].stage_name === 'Booked');\n      const treated = data.filter(opportunity => opportunity.stage_history[opportunity.stage_history.length - 1].stage_name === 'Treated');\n      dispatch({\n        type: 'SET_LEADS',\n        payload: leads\n      });\n      dispatch({\n        type: 'SET_QUALIFIED',\n        payload: qualified\n      });\n      dispatch({\n        type: 'SET_BOOKED',\n        payload: booked\n      });\n      dispatch({\n        type: 'SET_TREATED',\n        payload: treated\n      });\n    }).catch(error => console.error('Error fetching opportunities:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n// Export custom hooks for state and dispatch\n_s(DataProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = DataProvider;\nexport const useDataState = () => {\n  _s2();\n  const context = useContext(DataContext);\n  if (!context) {\n    throw new Error('useDataState must be used within a DataProvider');\n  }\n  return context.state;\n};\n\n// Custom hook to access the dispatch function\n_s2(useDataState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const useDataDispatch = () => {\n  _s3();\n  const context = useContext(DataContext);\n  if (!context) {\n    throw new Error('useDataDispatch must be used within a DataProvider');\n  }\n  return context.dispatch;\n};\n_s3(useDataDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","fetchOpportunities","jsxDEV","_jsxDEV","initialState","opportunities","leads","qualified","booked","treated","DataContext","dataReducer","state","action","type","payload","DataProvider","children","_s","dispatch","then","response","json","data","filter","opportunity","stage_history","length","stage_name","catch","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDataState","_s2","context","Error","useDataDispatch","_s3","$RefreshReg$"],"sources":["/home/dev-cache/medical-app-frontend/src/contexts/OpportunityContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { fetchOpportunities } from '../services/api';\n// Define the initial state with additional states\nconst initialState = {\n  opportunities: [],\n  leads: [],\n  qualified: [],\n  booked: [],\n  treated: [],\n  // ... other states\n};\n\nexport const DataContext = createContext();\n\n// Update the reducer to handle new actions\nconst dataReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_OPPORTUNITIES':\n      return { ...state, opportunities: action.payload };\n    case 'SET_LEADS':\n      return { ...state, leads: action.payload };\n    case 'SET_QUALIFIED':\n      return { ...state, qualified: action.payload };\n    case 'SET_BOOKED':\n      return { ...state, booked: action.payload };\n    case 'SET_TREATED':\n      return { ...state, treated: action.payload };\n    // ... other cases\n    default:\n      return state;\n  }\n};\n\n// DataProvider component\nexport const DataProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(dataReducer, initialState);\n\n  useEffect(() => {\n    // Fetch opportunities\n    fetchOpportunities()\n      .then(response => response.json())\n      .then(data => {\n        dispatch({ type: 'SET_OPPORTUNITIES', payload: data });\n  \n        // Filter opportunities based on the latest stage in their stage_history\n        const leads = data.filter(opportunity =>\n          opportunity.stage_history[opportunity.stage_history.length - 1].stage_name === 'Lead'\n        );\n        const qualified = data.filter(opportunity =>\n          opportunity.stage_history[opportunity.stage_history.length - 1].stage_name === 'Qualified'\n        );\n        const booked = data.filter(opportunity =>\n          opportunity.stage_history[opportunity.stage_history.length - 1].stage_name === 'Booked'\n        );\n        const treated = data.filter(opportunity =>\n          opportunity.stage_history[opportunity.stage_history.length - 1].stage_name === 'Treated'\n        );\n  \n        dispatch({ type: 'SET_LEADS', payload: leads });\n        dispatch({ type: 'SET_QUALIFIED', payload: qualified });\n        dispatch({ type: 'SET_BOOKED', payload: booked });\n        dispatch({ type: 'SET_TREATED', payload: treated });\n      })\n      .catch(error => console.error('Error fetching opportunities:', error));\n  }, []);\n\n  return (\n    <DataContext.Provider value={{ state, dispatch }}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n\n// Export custom hooks for state and dispatch\nexport const useDataState = () => {\n    const context = useContext(DataContext);\n    if (!context) {\n      throw new Error('useDataState must be used within a DataProvider');\n    }\n    return context.state;\n  };\n  \n  // Custom hook to access the dispatch function\n  export const useDataDispatch = () => {\n    const context = useContext(DataContext);\n    if (!context) {\n      throw new Error('useDataDispatch must be used within a DataProvider');\n    }\n    return context.dispatch;\n  };\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC/E,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG;EACnBC,aAAa,EAAE,EAAE;EACjBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE,EAAE;EACbC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE;EACT;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,gBAAGb,aAAa,CAAC,CAAC;;AAE1C;AACA,MAAMc,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,mBAAmB;MACtB,OAAO;QAAE,GAAGF,KAAK;QAAEP,aAAa,EAAEQ,MAAM,CAACE;MAAQ,CAAC;IACpD,KAAK,WAAW;MACd,OAAO;QAAE,GAAGH,KAAK;QAAEN,KAAK,EAAEO,MAAM,CAACE;MAAQ,CAAC;IAC5C,KAAK,eAAe;MAClB,OAAO;QAAE,GAAGH,KAAK;QAAEL,SAAS,EAAEM,MAAM,CAACE;MAAQ,CAAC;IAChD,KAAK,YAAY;MACf,OAAO;QAAE,GAAGH,KAAK;QAAEJ,MAAM,EAAEK,MAAM,CAACE;MAAQ,CAAC;IAC7C,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGH,KAAK;QAAEH,OAAO,EAAEI,MAAM,CAACE;MAAQ,CAAC;IAC9C;IACA;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGpB,UAAU,CAACY,WAAW,EAAEP,YAAY,CAAC;EAE/DJ,SAAS,CAAC,MAAM;IACd;IACAC,kBAAkB,CAAC,CAAC,CACjBmB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZJ,QAAQ,CAAC;QAAEL,IAAI,EAAE,mBAAmB;QAAEC,OAAO,EAAEQ;MAAK,CAAC,CAAC;;MAEtD;MACA,MAAMjB,KAAK,GAAGiB,IAAI,CAACC,MAAM,CAACC,WAAW,IACnCA,WAAW,CAACC,aAAa,CAACD,WAAW,CAACC,aAAa,CAACC,MAAM,GAAG,CAAC,CAAC,CAACC,UAAU,KAAK,MACjF,CAAC;MACD,MAAMrB,SAAS,GAAGgB,IAAI,CAACC,MAAM,CAACC,WAAW,IACvCA,WAAW,CAACC,aAAa,CAACD,WAAW,CAACC,aAAa,CAACC,MAAM,GAAG,CAAC,CAAC,CAACC,UAAU,KAAK,WACjF,CAAC;MACD,MAAMpB,MAAM,GAAGe,IAAI,CAACC,MAAM,CAACC,WAAW,IACpCA,WAAW,CAACC,aAAa,CAACD,WAAW,CAACC,aAAa,CAACC,MAAM,GAAG,CAAC,CAAC,CAACC,UAAU,KAAK,QACjF,CAAC;MACD,MAAMnB,OAAO,GAAGc,IAAI,CAACC,MAAM,CAACC,WAAW,IACrCA,WAAW,CAACC,aAAa,CAACD,WAAW,CAACC,aAAa,CAACC,MAAM,GAAG,CAAC,CAAC,CAACC,UAAU,KAAK,SACjF,CAAC;MAEDT,QAAQ,CAAC;QAAEL,IAAI,EAAE,WAAW;QAAEC,OAAO,EAAET;MAAM,CAAC,CAAC;MAC/Ca,QAAQ,CAAC;QAAEL,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAER;MAAU,CAAC,CAAC;MACvDY,QAAQ,CAAC;QAAEL,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAEP;MAAO,CAAC,CAAC;MACjDW,QAAQ,CAAC;QAAEL,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAEN;MAAQ,CAAC,CAAC;IACrD,CAAC,CAAC,CACDoB,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC,CAAC;EAC1E,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE3B,OAAA,CAACO,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAErB,KAAK;MAAEO;IAAS,CAAE;IAAAF,QAAA,EAC9CA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAnB,EAAA,CAvCaF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAwCzB,OAAO,MAAMuB,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC9B,MAAMC,OAAO,GAAG3C,UAAU,CAACY,WAAW,CAAC;EACvC,IAAI,CAAC+B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;EACpE;EACA,OAAOD,OAAO,CAAC7B,KAAK;AACtB,CAAC;;AAED;AAAA4B,GAAA,CARWD,YAAY;AASvB,OAAO,MAAMI,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACnC,MAAMH,OAAO,GAAG3C,UAAU,CAACY,WAAW,CAAC;EACvC,IAAI,CAAC+B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO,CAACtB,QAAQ;AACzB,CAAC;AAACyB,GAAA,CANWD,eAAe;AAAA,IAAAL,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}