{"ast":null,"code":"var _jsxFileName = \"/home/dev-cache/medical-app-frontend/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from 'react';\nimport { useDataState, useDataDispatch } from '../contexts/DataContext';\nimport { fetchOpportunities, uploadImage } from '../services/api'; // Import the image upload API function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const state = useDataState(); // Access state from context\n  const dispatch = useDataDispatch(); // Access dispatch from context\n  const [selectedFile, setSelectedFile] = useState(null); // State to store the selected image file\n\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleImageUpload = async () => {\n    if (selectedFile) {\n      try {\n        const formData = new FormData();\n        formData.append('image', selectedFile);\n\n        // Make an API call to upload the image\n        const response = await uploadImage(formData);\n        const imageUrl = response.data.url;\n\n        // Dispatch an action to update the state with the image URL\n        dispatch({\n          type: 'UPDATE_IMAGE_URL',\n          payload: imageUrl\n        });\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Make an API call to get all opportunities\n        const response = await fetchOpportunities();\n        const data = response.data;\n\n        // Dispatch an action to update the state with the fetched data\n        dispatch({\n          type: 'UPDATE_OPPORTUNITIES',\n          payload: data\n        });\n      } catch (error) {\n        console.error('Error fetching opportunities:', error);\n      }\n    };\n    fetchData();\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Medical App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Opportunities:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: state.opportunities.map(opportunity => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: opportunity.procedure_name\n      }, opportunity.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleImageUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), state.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Uploaded Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: state.imageUrl,\n        alt: \"Uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"QHblayrWE7PNeMBL5XgCMmLzGig=\", false, function () {\n  return [useDataState, useDataDispatch];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useContext","useState","useDataState","useDataDispatch","fetchOpportunities","uploadImage","jsxDEV","_jsxDEV","HomePage","_s","state","dispatch","selectedFile","setSelectedFile","handleFileChange","e","target","files","handleImageUpload","formData","FormData","append","response","imageUrl","data","url","type","payload","error","console","fetchData","children","fileName","_jsxFileName","lineNumber","columnNumber","opportunities","map","opportunity","procedure_name","id","accept","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["/home/dev-cache/medical-app-frontend/src/components/HomePage.jsx"],"sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport { useDataState, useDataDispatch } from '../contexts/DataContext';\nimport { fetchOpportunities, uploadImage } from '../services/api'; // Import the image upload API function\n\nconst HomePage = () => {\n  const state = useDataState(); // Access state from context\n  const dispatch = useDataDispatch(); // Access dispatch from context\n  const [selectedFile, setSelectedFile] = useState(null); // State to store the selected image file\n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleImageUpload = async () => {\n    if (selectedFile) {\n      try {\n        const formData = new FormData();\n        formData.append('image', selectedFile);\n\n        // Make an API call to upload the image\n        const response = await uploadImage(formData);\n        const imageUrl = response.data.url;\n\n        // Dispatch an action to update the state with the image URL\n        dispatch({ type: 'UPDATE_IMAGE_URL', payload: imageUrl });\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Make an API call to get all opportunities\n        const response = await fetchOpportunities();\n        const data = response.data;\n\n        // Dispatch an action to update the state with the fetched data\n        dispatch({ type: 'UPDATE_OPPORTUNITIES', payload: data });\n      } catch (error) {\n        console.error('Error fetching opportunities:', error);\n      }\n    };\n\n    fetchData();\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Welcome to the Medical App</h1>\n      <h2>Opportunities:</h2>\n      <ul>\n        {state.opportunities.map((opportunity) => (\n          <li key={opportunity.id}>{opportunity.procedure_name}</li>\n        ))}\n      </ul>\n\n      {/* Image upload form */}\n      <div>\n        <h2>Upload Image:</h2>\n        <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n        <button onClick={handleImageUpload}>Upload</button>\n      </div>\n\n      {/* Display the uploaded image if available */}\n      {state.imageUrl && (\n        <div>\n          <h2>Uploaded Image:</h2>\n          <img src={state.imageUrl} alt=\"Uploaded\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}